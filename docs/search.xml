<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[安装kali虚拟机]]></title>
    <url>%2FGBlog%2F2019%2F07%2F02%2Finstall-kali%2F</url>
    <content type="text"><![CDATA[Kali是一套用于安全渗透(黑客)的Linux发行版, 好处在于, 系统内置了大量的安全渗透方面的软件, 新手可以免于配置, 开箱即用! 即使不打算做安全, 开阔一下眼界也是好的~ Kali安装的过程中, 给出了太多的选项, 这里详细记录了安装配置的过程第一部分: 获取镜像(kali-linux-2018.1-amd64), 配置虚拟机(VMware 专业版 10.1.0 )获取Kali镜像 第二部分: 建立虚拟机从镜像安装 选择镜像, 继续 选择最新 Debian64位 选择传统BIOS引导, 继续 自定设置 选择位置后, 配置内存为4G 和硬盘容量为 64G(物理机资源充足, 为了虚拟机流畅,可以多配置一些物理资源) 第三部分: 开启虚拟机 语言:中文简体 地区: 中国 语言: 汉语 自动安装 配置网络 配置域名 填写密码(两次一致) 自动校对时钟 使用整个磁盘 选择需要分区的磁盘 选择分区方式 确认分区 真的确认了? 真的! 安装系统 使用网络镜像吗? 否! 将GRUB安装至硬盘? 是! 选择启动器安装位置 重启, 完成安装! 第四部分: 登录系统 登录root账户 第五部分: Kali的基本配置安装VMware Tools(物理机和虚拟机可共享粘贴板, 拖拽传输文件) 重启生效 更换镜像源 编辑 vim /etc/apt/sources.list 将镜像源写入sources.list文件, :wq,退出保存文件 更新镜像源apt-update123456789101112131415161718192021222324252627#阿里云deb http://mirrors.aliyun.com/kali kali-rolling main non-free contribdeb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib #清华大学deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-freedeb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free#中科大deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib #浙大#deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free#deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free #东软大学#deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib#deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib #官方源#deb http://http.kali.org/kali kali-rolling main non-free contrib#deb-src http://http.kali.org/kali kali-rolling main non-free contrib #重庆大学#deb http://http.kali.org/kali kali-rolling main non-free contrib#deb-src http://http.kali.org/kali kali-rolling main non-free contrib 安装google拼音输入法12apt-get install fcitxapt-get install fcitx-googlepinyin 重启系统后生效, 输入法切换, ctrl+space 更改目录为英文, 方便跳转12345678mv 桌面 Desktopmv 文档 Documentsmv 图片 Picturesmv 音乐 Musicmv 下载 Downloadsmv 视频 Videomv 公共 Publicmv 模板 Template]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Kali</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python将md批量转为docx.md]]></title>
    <url>%2FGBlog%2F2019%2F07%2F02%2Fmd-to-word%2F</url>
    <content type="text"><![CDATA[这两天写毕业论文, 发现了一个可以将markdown快速转为word格式的小工具pandoc, 非常好用, 比如我有一个名为毕业论文.md的文件, 我只需在命令行运行 1pandoc 毕业论文.md -o 毕业论文.docx 即可根据md文件生成新的docx文件! pandoc支持相互转换的格式, 多的惊人! Pandoc主站链接 安装包下载地址 使用技巧: 由于word确实很难用, 我们可以用md格式书写, 然后转换成docx 懒是第一生产力, pandoc可以在命令行运行, 所以, 我们可以配合python脚本将md格式批量转换为docx 这是我写的一个简易脚本 12345678910111213141516171819202122232425262728293031323334import os def auto_md_to_docx(file_dir): # 获取当前目录下所有的md文件的路径信息 all_whole_path_files = [] for root, dirs, files in os.walk(file_dir): for file in files: try: if file[-3:] == ".md": file_info = [root+'/', file] all_whole_path_files.append(file_info) except Exception as e: print(e) print("==&gt;", all_whole_path_files) # 将md依次转换为pandoc for file_info in all_whole_path_files: md_file_path_file = file_info[0] + file_info[1] docx_file_name = file_info[1][:-3] + '.docx' docx_file_path_file = file_info[0] + docx_file_name new_command = 'pandoc ' + md_file_path_file + ' -o ' + docx_file_path_file try: result = os.popen(new_command).readlines() if len(result) == 0: print(md_file_path_file, "已经转换为", docx_file_path_file) except Exception as e: print(e)def main(): auto_md_to_docx('.')if __name__ == '__main__': main() windows用户安装pandoc1.下载32位免安装版软件包下载地址: https://github.com/jgm/pandoc/releases/tag/2.2.1 2.将软件包放入c盘, 并解压 3.获取pandoc.exe的绝对路径 4. 将pandoc.exe的绝对路径放入环境变量 值得一提的是, 我这里用的md测试文件, 都是从我的简书后台打包下载的, 也就是本地是不存在图片的, 而pandoc会自动帮我们把图片下载到本地, 然后保存到新生成的doc中. 只要将我的脚本稍加修改, 就可以按照上面的网状图, 进行任意两种格式的互转(比如word转pdf), 有兴趣的小伙伴可以自己动手折腾一下 另外, 小白福利, 我把这篇博客做成了视频 https://www.bilibili.com/video/av24136955/欢迎观看, 欢迎投币, 欢迎弹幕, 欢迎转发]]></content>
      <categories>
        <category>程序员</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Word</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3行代码发邮件(含发送图片)]]></title>
    <url>%2FGBlog%2F2019%2F07%2F02%2Fpython-send-mail%2F</url>
    <content type="text"><![CDATA[最近有发邮件的需求发现了一个python发邮件的开源项目yagmail, 3行代码搞定邮件, 很赞 以下三行代码实现的功能 发送超链接 发送图片资源(支持发送各种静态资源, 文件名最好是英文) 源码12345678910import yagmail# 连接邮箱服务器yag = yagmail.SMTP(user=&quot;lijianzhaoyou@163.com&quot;, password=&quot;填自己的&quot;, host=&apos;smtp.163.com&apos;)# 邮箱正文contents = [&apos;今天是周末,我要学习, 学习使我快乐;&apos;, &apos;&lt;a href=&quot;https://www.python.org/&quot;&gt;python官网的超链接&lt;/a&gt;&apos;, &apos;./girl.jpg&apos;]# 发送邮件yag.send(&apos;zhaoolee@gmail.com&apos;, &apos;主题:学习使我快乐&apos;, contents) 图片资源在此: 如何获取163邮箱授权码?]]></content>
      <categories>
        <category>程序员</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>mail</tag>
      </tags>
  </entry>
</search>
